
230816 Justering av insert i resultat tabellen.
230816 Intruduktion av Matdata tabellen
230816 Läsning av tabellen Defaulter om optimering misslyckats.
230817 Anvädning av tabellen Derfaulter när ingen optimal lösning hittas..

Ny funktion Optimering. 

Du kan alltid testa SQL satsen så här.

$sudo mysql -u root -p
lösen: raspberry
>use vaader;
>skriv SQL sats
>exit;



Detta är en funktion som inte har något fönster. Den startas som jar fil från linux direkt. PÅ viss tid.

Det första vi gör är att skaffa oss en tid AAAAMMDD TT. Man kan hårdkoda detta i början då det idag inte finns automatik för SMHI och NORDP i utvecklingsmiljön.
*Vi sakll också sätta alla alternativ som tillgängliga. Det gör vi med SQL satsen nedan.
UPDATE alternativR SET vald=1;


Det vi skall optimera är för tiden AAAAMMDD TT+1. Alltså nästa timme. 

Vi löser av SQL frågan nedan. Den visar det biliigaste altnr_id 't. Den tar lite tid men jag tror man kan fixa lite med index och nyckalar för att skynda på den lite.
*
SELECT t.altnr_id ,SUM(paav*NORDPpris*0.5) as total_x FROM (Parametrar d, Kalender f)     
JOIN (Dagtyp g,NORDP c,connect x,alternativ t,alternativR r)     
ON (f.dagtyp=g.dagtyp and c.data_date=f.data_date and g.timme = c.NORDPtimme  and  g.timme=x.timme and x.nrtimme=t.timme and t.altnr_id=r.altnr_id)     
WHERE  f.data_date*100+g.timme>=2023080721 and  f.data_date*100+g.timme<=2023080803  and x.starttimme=21 and (f.data_date=20230807 or f.data_date=20230808) and r.vald=1 
GROUP by t.altnr_id   
ORDER by total_x ASC limit 1;


Vi vet ju dock inte om det fungerar med hänsyn till max och min temperatur. 
Vi får kolla detta med samma SQLfråga som i fönstret Simulering.
*
SELECT f.data_date,g.timme,c.NORDPpris*0.5 as hNORDPpris,g.Tmin,g.Tmax,(g.Tmin-e.SMHItemp)*d.avBeta*0.5 as TempNed,(d.paaAlfa-(g.Tmin-e.SMHItemp)*d.avBeta)*0.5 as TempUpp,f.data_date*100+g.timme as SokID,x.min,x.nrtimme,t.paav 
FROM (Parametrar d, Kalender f)   
JOIN (Dagtyp g,NORDP c,SMHI e, connect x,alternativ t)   
ON (f.dagtyp=g.dagtyp and c.data_date=f.data_date and g.timme = c.NORDPtimme  and c.data_date=e.data_date and g.timme = e.SMHItimme and g.timme=x.timme and x.nrtimme=t.timme)   
WHERE  f.data_date*100+g.timme>=2023080721 and  f.data_date*100+g.timme<=2023080803  and x.starttimme=21 and t.altnr_id = 2 and (f.data_date=20230807 or f.data_date=20230808)
ORDER BY f.data_date,g.timme,x.min;


För sökning krävs.
Dagens datum 20230807
Tid för simulerimgems början 21
Datum tid från simuleringnes början + 6 timmar


Vi hämtar starttemperatur (inne) från tabellen Matdata. Detta är mätdata som samlas in var 10e minut så det är den senaste som man är inresserad av.

SELECT inne,mattid 
FROM Matdata 
ORDER BY mattid DESC limit 1 ;


Om den funkar ,d.v.s ingen temperatur over max elle under min, så är ju problemet löst och den billigaste lösningen hittad och vi kan uppdatera resultat tabellen.

Om den därmot inte funkar så är det viktigt att vi tar reda på i vilken av paav som "smäller". Var går den över eller under max min temperatur?

Låt ooss anta att det är paav i ordningen 3 som smäller. Då vet vi atta alla alternativ som är lika fram till 3 inte heller kommer att fungera. alltså sätter vi.

+---------+------------+-------+-----+------------+------+------+------+
| ordning | data_date  | timme | min | hNORDPpris | Tmin | Tmax | paav |
+---------+------------+-------+-----+------------+------+------+------+
|       1 | 2023-08-07 |    21 |   0 |       0.35 |   12 |   25 |    0 |
|       2 | 2023-08-07 |    21 |  30 |       0.35 |   12 |   25 |    1 |
|       3 | 2023-08-07 |    22 |   0 |       0.00 |   12 |   25 |    0 |
|       4 | 2023-08-07 |    22 |  30 |       0.00 |   12 |   25 |    0 |
|       5 | 2023-08-07 |    23 |   0 |      -0.10 |   12 |   25 |    0 |
|       6 | 2023-08-07 |    23 |  30 |      -0.10 |   12 |   25 |    0 |
|       7 | 2023-08-08 |     0 |   0 |      -2.15 |   22 |   27 |    0 |
|       8 | 2023-08-08 |     0 |  30 |      -2.15 |   22 |   27 |    0 |
|       9 | 2023-08-08 |     1 |   0 |      -3.00 |   22 |   27 |    0 |
|      10 | 2023-08-08 |     1 |  30 |      -3.00 |   22 |   27 |    0 |
|      11 | 2023-08-08 |     2 |   0 |      -3.10 |   22 |   27 |    0 |
|      12 | 2023-08-08 |     2 |  30 |      -3.10 |   22 |   27 |    0 |
+---------+------------+-------+-----+------------+------+------+------+




Tabellen i exemplet ovan visar alternativR sätt vald=0 där paav1=0, paav2=1 och paav3=0. Vi vill alltså inte se några mer förslag som har av på av de första tre halvtimmarna.


UPDATE alternativR set vald=0 where paav1=0 and paav2=1 and paav3=0;

det varierar ju hur många paav som behövs det kan vara en upp till tolv. Beroende på var det spårar ur...

det kan exempelvis också se ut så här.
*
UPDATE alternativR set vald=0 where paav1=0 and paav2=1 and paav3=0 and paav4=5 and paav5=0 and paav6=1  and paav8=1;

Men alltid i ordninng 1 2 3 ... 12 


Sen läser vi samma SQL fråga IGEN som visar visar det biliigaste alternativ altnr_id 't. Se frågan ovan.
Vi gör denna loop igen och igen tills dess vi har en lösning som funkar. Eller inte.....


Det kan ju vara så att man inte hittar någon lösning inna alla alternativ är slut. Då sätter vi en default tempperatur från tabellen Defaulter. 
   SELECT varde FROM Defaulter where typ="TSOSP";
   INSERT INTO resultat (bertid,alt_id ,typ,data_date,Rtimme,Rmin,Rtemp) VALUES (20230813102131,"TOSP",2,20230813,22,00,21); Där Rtemp 21 kommer från Defaulter liksom koden för typ TOSP. Vilket visar att det är ett defalutvärde.
Vi nöjer oss med en post i resultat tabellen när detta händer.



Annars om vi hittar en lösning sa skriver vi inn den i tabellen resultat.
OBS.Det är 12 poster som skall skrivas in. Vi berskriver ju vilken temperatus som skall eftrstävas halvtimme för halvtimme.
    INSERT INTO resultat(bertid,alt_id,data_date,Rtimme,Rmin,Rtemp) values (20230817090000,2,20230817,10,00,21); OBS! 12 poster
OBS1 bertid är en tidsstämpel när posten skrivs. AAMMDD TTMMSS
OBS2 data_date kan ju vara olika. Eller snarare två efter varandra följande datum. Men tidsstäpeln är samma de skrivs ju på samma tid.


KLART!!!!






















